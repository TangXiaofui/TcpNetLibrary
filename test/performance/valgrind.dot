digraph {
	graph [ranksep=0.25, fontname=Arial, nodesep=0.125];
	node [fontname=Arial, style=filled, height=0, width=0, shape=box, fontcolor=white];
	edge [fontname=Arial];
	"Logger::record(int, char const*, int, char const*, char const*, ...)" [color="#c3d606", fontcolor="#ffffff", fontsize="10.00", label="Logger::record\n72.66%\n(1.14%)\n149223×"];
	"Logger::record(int, char const*, int, char const*, char const*, ...)" -> "__vsnprintf_chk" [color="#0c958e", label="26.42%\n149222×", arrowsize="0.51", fontsize="10.00", fontcolor="#0c958e", labeldistance="1.06", penwidth="1.06"];
	"Logger::record(int, char const*, int, char const*, char const*, ...)" -> "__snprintf_chk" [color="#0c968d", label="26.56%\n149222×", arrowsize="0.52", fontsize="10.00", fontcolor="#0c968d", labeldistance="1.06", penwidth="1.06"];
	"Logger::record(int, char const*, int, char const*, char const*, ...)" -> "localtime_r" [color="#0c688a", label="18.18%\n149222×", arrowsize="0.43", fontsize="10.00", fontcolor="#0c688a", labeldistance="0.73", penwidth="0.73"];
	"std::_Function_handler<void (int, NetAddress const&), std::_Bind<std::_Mem_fn<void (TcpServer::*)(int, NetAddress const&)> (TcpServer*, std::_Placeholder<1>, std::_Placeholder<2>)> >::_M_invoke(std::_Any_data const&, int&&, NetAddress const&)" [color="#0c9a7f", fontcolor="#ffffff", fontsize="10.00", label="std::_Function_handler::_M_invoke\n29.68%\n(0.01%)\n9313×"];
	"std::_Function_handler<void (int, NetAddress const&), std::_Bind<std::_Mem_fn<void (TcpServer::*)(int, NetAddress const&)> (TcpServer*, std::_Placeholder<1>, std::_Placeholder<2>)> >::_M_invoke(std::_Any_data const&, int&&, NetAddress const&)" -> "TcpServer::newConnection(int, NetAddress const&)" [color="#0c9a7f", label="29.68%\n9313×", arrowsize="0.54", fontsize="10.00", fontcolor="#0c9a7f", labeldistance="1.19", penwidth="1.19"];
	"0x0000000000000c30" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="0x0000000000000c30\n100.00%\n(0.00%)\n0×"];
	"0x0000000000000c30" -> "_start" [color="#0d4883", label="12.49%\n1×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d4883", labeldistance="0.50", penwidth="0.50"];
	"0x0000000000000c30" -> "_dl_init" [color="#ec7803", label="87.46%\n1×", arrowsize="0.94", fontsize="10.00", fontcolor="#ec7803", labeldistance="3.50", penwidth="3.50"];
	"RunAllTests(char const*) [clone .part.97]" [color="#ff0100", fontcolor="#ffffff", fontsize="10.00", label="RunAllTests [clone .part.97]\n99.95%\n(0.00%)\n1×"];
	"RunAllTests(char const*) [clone .part.97]" -> "_Test_testHttp::_RunIt()" [color="#ff0100", label="99.95%\n1×", arrowsize="1.00", fontsize="10.00", fontcolor="#ff0100", labeldistance="4.00", penwidth="4.00"];
	"localtime_r" [color="#0c688a", fontcolor="#ffffff", fontsize="10.00", label="localtime_r\n18.18%\n(0.03%)\n149223×"];
	"localtime_r" -> "__tz_convert" [color="#0c688a", label="18.15%\n149223×", arrowsize="0.43", fontsize="10.00", fontcolor="#0c688a", labeldistance="0.73", penwidth="0.73"];
	"testHttpServer(int)" [color="#ff0100", fontcolor="#ffffff", fontsize="10.00", label="testHttpServer\n99.95%\n(0.00%)\n1×"];
	"testHttpServer(int)" -> "EventLoop::loop()" [color="#ff0100", label="99.94%\n1×", arrowsize="1.00", fontsize="10.00", fontcolor="#ff0100", labeldistance="4.00", penwidth="4.00"];
	"_start" [color="#0d4883", fontcolor="#ffffff", fontsize="10.00", label="_start\n12.49%\n(0.00%)\n1×"];
	"_start" -> "_dl_runtime_resolve_sse" [color="#0d4883", label="12.49%\n1×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d4883", labeldistance="0.50", penwidth="0.50"];
	"HttpServer::onMessage(std::shared_ptr<TcpConnection> const&, Buffer*, TimeStamp)" [color="#0ba167", fontcolor="#ffffff", fontsize="10.00", label="HttpServer::onMessage\n34.69%\n(0.05%)\n9312×"];
	"HttpServer::onMessage(std::shared_ptr<TcpConnection> const&, Buffer*, TimeStamp)" -> "HttpServer::onRequest(std::shared_ptr<TcpConnection> const&, HttpRequest const&)" [color="#0b9d72", label="32.38%\n9312×", arrowsize="0.57", fontsize="10.00", fontcolor="#0b9d72", labeldistance="1.30", penwidth="1.30"];
	"call_init.part.0" [color="#ec7803", fontcolor="#ffffff", fontsize="10.00", label="call_init.part.0\n87.46%\n(0.00%)\n8×"];
	"call_init.part.0" -> "0x0000000000089e10" [color="#0c9393", label="24.99%\n1×", arrowsize="0.50", fontsize="10.00", fontcolor="#0c9393", labeldistance="1.00", penwidth="1.00"];
	"call_init.part.0" -> "0x0000000004c2f580" [color="#0ba458", label="37.48%\n1×", arrowsize="0.61", fontsize="10.00", fontcolor="#0ba458", labeldistance="1.50", penwidth="1.50"];
	"call_init.part.0" -> "0x0000000000089eb0" [color="#0d4883", label="12.49%\n1×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d4883", labeldistance="0.50", penwidth="0.50"];
	"call_init.part.0" -> "0x0000000000089e90" [color="#0d4883", label="12.49%\n1×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d4883", labeldistance="0.50", penwidth="0.50"];
	"std::_Function_handler<void (std::shared_ptr<TcpConnection> const&, Buffer*, TimeStamp), std::_Bind<std::_Mem_fn<void (HttpServer::*)(std::shared_ptr<TcpConnection> const&, Buffer*, TimeStamp)> (HttpServer*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>)> >::_M_invoke(std::_Any_data const&, std::shared_ptr<TcpConnection> const&, Buffer*&&, TimeStamp&&)" [color="#0ba167", fontcolor="#ffffff", fontsize="10.00", label="std::_Function_handler::_M_invoke\n34.69%\n(0.01%)\n9312×"];
	"std::_Function_handler<void (std::shared_ptr<TcpConnection> const&, Buffer*, TimeStamp), std::_Bind<std::_Mem_fn<void (HttpServer::*)(std::shared_ptr<TcpConnection> const&, Buffer*, TimeStamp)> (HttpServer*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>)> >::_M_invoke(std::_Any_data const&, std::shared_ptr<TcpConnection> const&, Buffer*&&, TimeStamp&&)" -> "HttpServer::onMessage(std::shared_ptr<TcpConnection> const&, Buffer*, TimeStamp)" [color="#0ba167", label="34.69%\n9312×", arrowsize="0.59", fontsize="10.00", fontcolor="#0ba167", labeldistance="1.39", penwidth="1.39"];
	"0x0000000000089e90" [color="#0d4883", fontcolor="#ffffff", fontsize="10.00", label="0x0000000000089e90\n12.49%\n(0.00%)\n1×"];
	"0x0000000000089e90" -> "_dl_runtime_resolve_sse" [color="#0d4883", label="12.49%\n1×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d4883", labeldistance="0.50", penwidth="0.50"];
	"_IO_default_xsputn" [color="#0c5987", fontcolor="#ffffff", fontsize="10.00", label="_IO_default_xsputn\n15.69%\n(15.42%)\n4749053×"];
	"std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (TcpServer::*)(std::shared_ptr<TcpConnection> const&)> (TcpServer*, std::shared_ptr<TcpConnection>)> >::_M_invoke(std::_Any_data const&)" [color="#0d4e84", fontcolor="#ffffff", fontsize="10.00", label="std::_Function_handler::_M_invoke\n13.62%\n(0.01%)\n18625×"];
	"std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (TcpServer::*)(std::shared_ptr<TcpConnection> const&)> (TcpServer*, std::shared_ptr<TcpConnection>)> >::_M_invoke(std::_Any_data const&)" -> "TcpServer::removeConnectionInLoop(std::shared_ptr<TcpConnection> const&)" [color="#0d4e84", label="13.61%\n18625×", arrowsize="0.37", fontsize="10.00", fontcolor="#0d4e84", labeldistance="0.54", penwidth="0.54"];
	"TcpServer::removeConnectionInLoop(std::shared_ptr<TcpConnection> const&)" [color="#0d4e84", fontcolor="#ffffff", fontsize="10.00", label="TcpServer::removeConnectionInLoop\n13.61%\n(0.08%)\n18625×"];
	"TcpServer::removeConnectionInLoop(std::shared_ptr<TcpConnection> const&)" -> "Logger::record(int, char const*, int, char const*, char const*, ...)" [color="#0d367e", label="9.07%\n18625×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d367e", labeldistance="0.50", penwidth="0.50"];
	main [color="#ff0100", fontcolor="#ffffff", fontsize="10.00", label="main\n99.95%\n(0.00%)\n1×"];
	main -> "RunAllTests(char const*) [clone .part.97]" [color="#ff0100", label="99.95%\n1×", arrowsize="1.00", fontsize="10.00", fontcolor="#ff0100", labeldistance="4.00", penwidth="4.00"];
	"0x0000000000089eb0" [color="#0d4883", fontcolor="#ffffff", fontsize="10.00", label="0x0000000000089eb0\n12.49%\n(0.00%)\n1×"];
	"0x0000000000089eb0" -> "_dl_runtime_resolve_sse" [color="#0d4883", label="12.49%\n1×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d4883", labeldistance="0.50", penwidth="0.50"];
	"EventLoop::runInLoop(std::function<void ()> const&)" [color="#0c9885", fontcolor="#ffffff", fontsize="10.00", label="EventLoop::runInLoop\n28.36%\n(0.04%)\n37251×"];
	"EventLoop::runInLoop(std::function<void ()> const&)" -> "std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (TcpServer::*)(std::shared_ptr<TcpConnection> const&)> (TcpServer*, std::shared_ptr<TcpConnection>)> >::_M_invoke(std::_Any_data const&)" [color="#0d4e84", label="13.62%\n18625×", arrowsize="0.37", fontsize="10.00", fontcolor="#0d4e84", labeldistance="0.54", penwidth="0.54"];
	"EventLoop::runInLoop(std::function<void ()> const&)" -> "std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (TcpConnection::*)()> (TcpConnection*)> >::_M_invoke(std::_Any_data const&)" [color="#0d397f", label="9.68%\n9312×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d397f", labeldistance="0.50", penwidth="0.50"];
	"(below main)" [color="#ff0100", fontcolor="#ffffff", fontsize="10.00", label="\n99.95%\n(0.00%)\n1×"];
	"(below main)" -> main [color="#ff0100", label="99.95%\n1×", arrowsize="1.00", fontsize="10.00", fontcolor="#ff0100", labeldistance="4.00", penwidth="4.00"];
	"TcpConnection::handleClose()" [color="#0c9884", fontcolor="#ffffff", fontsize="10.00", label="TcpConnection::handleClose\n28.60%\n(0.08%)\n18625×"];
	"TcpConnection::handleClose()" -> "Channel::disableAll()" [color="#0d387f", label="9.48%\n18625×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d387f", labeldistance="0.50", penwidth="0.50"];
	"TcpConnection::handleClose()" -> "Logger::record(int, char const*, int, char const*, char const*, ...)" [color="#0d367e", label="9.07%\n18625×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d367e", labeldistance="0.50", penwidth="0.50"];
	"std::_Function_handler<void (HttpRequest const&, HttpResponse*), void (*)(HttpRequest const&, HttpResponse*)>::_M_invoke(std::_Any_data const&, HttpRequest const&, HttpResponse*&&)" [color="#0c6b8b", fontcolor="#ffffff", fontsize="10.00", label="std::_Function_handler::_M_invoke\n18.64%\n(0.00%)\n9312×"];
	"std::_Function_handler<void (HttpRequest const&, HttpResponse*), void (*)(HttpRequest const&, HttpResponse*)>::_M_invoke(std::_Any_data const&, HttpRequest const&, HttpResponse*&&)" -> "onRequest(HttpRequest const&, HttpResponse*)" [color="#0c6b8b", label="18.64%\n9312×", arrowsize="0.43", fontsize="10.00", fontcolor="#0c6b8b", labeldistance="0.75", penwidth="0.75"];
	"std::_Function_handler<void (TimeStamp), std::_Bind<std::_Mem_fn<void (TcpConnection::*)(TimeStamp)> (TcpConnection*, std::_Placeholder<1>)> >::_M_invoke(std::_Any_data const&, TimeStamp&&)" [color="#0aae2f", fontcolor="#ffffff", fontsize="10.00", label="std::_Function_handler::_M_invoke\n44.31%\n(0.01%)\n18625×"];
	"std::_Function_handler<void (TimeStamp), std::_Bind<std::_Mem_fn<void (TcpConnection::*)(TimeStamp)> (TcpConnection*, std::_Placeholder<1>)> >::_M_invoke(std::_Any_data const&, TimeStamp&&)" -> "TcpConnection::handleRead(TimeStamp)" [color="#0aae30", label="44.30%\n18625×", arrowsize="0.67", fontsize="10.00", fontcolor="#0aae30", labeldistance="1.77", penwidth="1.77"];
	"_Test_testHttp::_RunIt()" [color="#ff0100", fontcolor="#ffffff", fontsize="10.00", label="_Test_testHttp::_RunIt\n99.95%\n(0.00%)\n1×"];
	"_Test_testHttp::_RunIt()" -> "testHttpServer(int)" [color="#ff0100", label="99.95%\n1×", arrowsize="1.00", fontsize="10.00", fontcolor="#ff0100", labeldistance="4.00", penwidth="4.00"];
	"Poller::updateChannel(Channel*)" [color="#0c6c8b", fontcolor="#ffffff", fontsize="10.00", label="Poller::updateChannel\n18.83%\n(0.37%)\n37254×"];
	"Poller::updateChannel(Channel*)" -> "Logger::record(int, char const*, int, char const*, char const*, ...)" [color="#0c688a", label="18.14%\n37254×", arrowsize="0.43", fontsize="10.00", fontcolor="#0c688a", labeldistance="0.73", penwidth="0.73"];
	"Channel::disableAll()" [color="#0c5185", fontcolor="#ffffff", fontsize="10.00", label="Channel::disableAll\n14.22%\n(0.01%)\n27938×"];
	"Channel::disableAll()" -> "EventLoop::updateChannel(Channel*)" [color="#0c5185", label="14.21%\n27938×", arrowsize="0.38", fontsize="10.00", fontcolor="#0c5185", labeldistance="0.57", penwidth="0.57"];
	"EventLoop::loop()" [color="#ff0100", fontcolor="#ffffff", fontsize="10.00", label="EventLoop::loop\n99.94%\n(0.02%)\n1×"];
	"EventLoop::loop()" -> "Channel::handleEvent(TimeStamp)" [color="#ed7103", label="88.27%\n27938×", arrowsize="0.94", fontsize="10.00", fontcolor="#ed7103", labeldistance="3.53", penwidth="3.53"];
	"EventLoop::updateChannel(Channel*)" [color="#0c6d8b", fontcolor="#ffffff", fontsize="10.00", label="EventLoop::updateChannel\n18.95%\n(0.05%)\n37254×"];
	"EventLoop::updateChannel(Channel*)" -> "Poller::updateChannel(Channel*)" [color="#0c6c8b", label="18.83%\n37254×", arrowsize="0.43", fontsize="10.00", fontcolor="#0c6c8b", labeldistance="0.75", penwidth="0.75"];
	"__vsnprintf_chk" [color="#4fc308", fontcolor="#ffffff", fontsize="10.00", label="__vsnprintf_chk\n59.44%\n(1.19%)\n335697×"];
	"__vsnprintf_chk" -> vfprintf [color="#34be09", label="55.93%\n335697×", arrowsize="0.75", fontsize="10.00", fontcolor="#34be09", labeldistance="2.24", penwidth="2.24"];
	"0x0000000004c2f580" [color="#0ba458", fontcolor="#ffffff", fontsize="10.00", label="0x0000000004c2f580\n37.48%\n(0.00%)\n1×"];
	"0x0000000004c2f580" -> "__pthread_initialize_minimal" [color="#0ba458", label="37.48%\n1×", arrowsize="0.61", fontsize="10.00", fontcolor="#0ba458", labeldistance="1.50", penwidth="1.50"];
	"Channel::handleEvent(TimeStamp)" [color="#ed7103", fontcolor="#ffffff", fontsize="10.00", label="Channel::handleEvent\n88.27%\n(0.08%)\n27938×"];
	"Channel::handleEvent(TimeStamp)" -> "std::_Function_handler<void (TimeStamp), std::_Bind<std::_Mem_fn<void (Acceptor::*)(TimeStamp)> (Acceptor*, std::_Placeholder<1>)> >::_M_invoke(std::_Any_data const&, TimeStamp&&)" [color="#0c9a7f", label="29.76%\n9313×", arrowsize="0.55", fontsize="10.00", fontcolor="#0c9a7f", labeldistance="1.19", penwidth="1.19"];
	"Channel::handleEvent(TimeStamp)" -> "std::_Function_handler<void (TimeStamp), std::_Bind<std::_Mem_fn<void (TcpConnection::*)(TimeStamp)> (TcpConnection*, std::_Placeholder<1>)> >::_M_invoke(std::_Any_data const&, TimeStamp&&)" [color="#0aae2f", label="44.31%\n18625×", arrowsize="0.67", fontsize="10.00", fontcolor="#0aae2f", labeldistance="1.77", penwidth="1.77"];
	"Channel::handleEvent(TimeStamp)" -> "Logger::record(int, char const*, int, char const*, char const*, ...)" [color="#0d2079", label="4.53%\n9312×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d2079", labeldistance="0.50", penwidth="0.50"];
	"Channel::handleEvent(TimeStamp)" -> "std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (TcpConnection::*)()> (TcpConnection*)> >::_M_invoke(std::_Any_data const&)" [color="#0d387f", label="9.58%\n9412×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d387f", labeldistance="0.50", penwidth="0.50"];
	"__tz_convert" [color="#0c6f8c", fontcolor="#ffffff", fontsize="10.00", label="__tz_convert\n19.28%\n(0.63%)\n158535×"];
	"__tz_convert" -> "__tzfile_compute" [color="#0c5c88", label="16.23%\n158535×", arrowsize="0.40", fontsize="10.00", fontcolor="#0c5c88", labeldistance="0.65", penwidth="0.65"];
	"TcpConnection::handleRead(TimeStamp)" [color="#0aae30", fontcolor="#ffffff", fontsize="10.00", label="TcpConnection::handleRead\n44.30%\n(0.06%)\n18625×"];
	"TcpConnection::handleRead(TimeStamp)" -> "TcpConnection::handleClose()" [color="#0d387f", label="9.48%\n9313×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d387f", labeldistance="0.50", penwidth="0.50"];
	"TcpConnection::handleRead(TimeStamp)" -> "std::_Function_handler<void (std::shared_ptr<TcpConnection> const&, Buffer*, TimeStamp), std::_Bind<std::_Mem_fn<void (HttpServer::*)(std::shared_ptr<TcpConnection> const&, Buffer*, TimeStamp)> (HttpServer*, std::_Placeholder<1>, std::_Placeholder<2>, std::_Placeholder<3>)> >::_M_invoke(std::_Any_data const&, std::shared_ptr<TcpConnection> const&, Buffer*&&, TimeStamp&&)" [color="#0ba167", label="34.69%\n9312×", arrowsize="0.59", fontsize="10.00", fontcolor="#0ba167", labeldistance="1.39", penwidth="1.39"];
	"onRequest(HttpRequest const&, HttpResponse*)" [color="#0c6b8b", fontcolor="#ffffff", fontsize="10.00", label="onRequest\n18.64%\n(0.16%)\n9312×"];
	"onRequest(HttpRequest const&, HttpResponse*)" -> "Logger::record(int, char const*, int, char const*, char const*, ...)" [color="#0d4e84", label="13.60%\n27936×", arrowsize="0.37", fontsize="10.00", fontcolor="#0d4e84", labeldistance="0.54", penwidth="0.54"];
	"__pthread_initialize_minimal" [color="#0ba458", fontcolor="#ffffff", fontsize="10.00", label="__pthread_initialize_minimal\n37.48%\n(0.00%)\n1×"];
	"__pthread_initialize_minimal" -> "_dl_runtime_resolve_sse" [color="#0ba458", label="37.48%\n3×", arrowsize="0.61", fontsize="10.00", fontcolor="#0ba458", labeldistance="1.50", penwidth="1.50"];
	"std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (TcpConnection::*)()> (TcpConnection*)> >::_M_invoke(std::_Any_data const&)" [color="#0c6f8c", fontcolor="#ffffff", fontsize="10.00", label="std::_Function_handler::_M_invoke\n19.26%\n(0.01%)\n18724×"];
	"std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (TcpConnection::*)()> (TcpConnection*)> >::_M_invoke(std::_Any_data const&)" -> "TcpConnection::handleClose()" [color="#0c6e8c", label="19.12%\n9312×", arrowsize="0.44", fontsize="10.00", fontcolor="#0c6e8c", labeldistance="0.76", penwidth="0.76"];
	"__snprintf_chk" [color="#0b9e6e", fontcolor="#ffffff", fontsize="10.00", label="__snprintf_chk\n33.20%\n(0.18%)\n186474×"];
	"__snprintf_chk" -> "__vsnprintf_chk" [color="#0b9e6f", label="33.02%\n186474×", arrowsize="0.57", fontsize="10.00", fontcolor="#0b9e6f", labeldistance="1.32", penwidth="1.32"];
	"0x0000000000089e10" [color="#0c9393", fontcolor="#ffffff", fontsize="10.00", label="0x0000000000089e10\n24.99%\n(0.00%)\n1×"];
	"0x0000000000089e10" -> "_dl_runtime_resolve_sse" [color="#0c9393", label="24.99%\n2×", arrowsize="0.50", fontsize="10.00", fontcolor="#0c9393", labeldistance="1.00", penwidth="1.00"];
	"std::_Function_handler<void (TimeStamp), std::_Bind<std::_Mem_fn<void (Acceptor::*)(TimeStamp)> (Acceptor*, std::_Placeholder<1>)> >::_M_invoke(std::_Any_data const&, TimeStamp&&)" [color="#0c9a7f", fontcolor="#ffffff", fontsize="10.00", label="std::_Function_handler::_M_invoke\n29.76%\n(0.01%)\n9313×"];
	"std::_Function_handler<void (TimeStamp), std::_Bind<std::_Mem_fn<void (Acceptor::*)(TimeStamp)> (Acceptor*, std::_Placeholder<1>)> >::_M_invoke(std::_Any_data const&, TimeStamp&&)" -> "Acceptor::handleRead(TimeStamp)" [color="#0c9a7f", label="29.75%\n9313×", arrowsize="0.55", fontsize="10.00", fontcolor="#0c9a7f", labeldistance="1.19", penwidth="1.19"];
	"__tzfile_compute" [color="#0c5c88", fontcolor="#ffffff", fontsize="10.00", label="__tzfile_compute\n16.23%\n(0.70%)\n158535×"];
	"__tzfile_compute" -> "__tzset_parse_tz" [color="#0d4682", label="12.11%\n149223×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d4682", labeldistance="0.50", penwidth="0.50"];
	"__tzset_parse_tz" [color="#0d4682", fontcolor="#ffffff", fontsize="10.00", label="__tzset_parse_tz\n12.11%\n(1.17%)\n149223×"];
	"_dl_init" [color="#ec7803", fontcolor="#ffffff", fontsize="10.00", label="_dl_init\n87.46%\n(0.00%)\n1×"];
	"_dl_init" -> "call_init.part.0" [color="#ec7803", label="87.46%\n8×", arrowsize="0.94", fontsize="10.00", fontcolor="#ec7803", labeldistance="3.50", penwidth="3.50"];
	"_dl_runtime_resolve_sse" [color="#ff0100", fontcolor="#ffffff", fontsize="10.00", label="_dl_runtime_resolve_sse\n99.95%\n(0.00%)\n8×"];
	"_dl_runtime_resolve_sse" -> "(below main)" [color="#ff0100", label="99.95%\n1×", arrowsize="1.00", fontsize="10.00", fontcolor="#ff0100", labeldistance="4.00", penwidth="4.00"];
	"Acceptor::handleRead(TimeStamp)" [color="#0c9a7f", fontcolor="#ffffff", fontsize="10.00", label="Acceptor::handleRead\n29.75%\n(0.02%)\n9313×"];
	"Acceptor::handleRead(TimeStamp)" -> "std::_Function_handler<void (int, NetAddress const&), std::_Bind<std::_Mem_fn<void (TcpServer::*)(int, NetAddress const&)> (TcpServer*, std::_Placeholder<1>, std::_Placeholder<2>)> >::_M_invoke(std::_Any_data const&, int&&, NetAddress const&)" [color="#0c9a7f", label="29.68%\n9313×", arrowsize="0.54", fontsize="10.00", fontcolor="#0c9a7f", labeldistance="1.19", penwidth="1.19"];
	"HttpServer::onRequest(std::shared_ptr<TcpConnection> const&, HttpRequest const&)" [color="#0b9d72", fontcolor="#ffffff", fontsize="10.00", label="HttpServer::onRequest\n32.38%\n(0.06%)\n9312×"];
	"HttpServer::onRequest(std::shared_ptr<TcpConnection> const&, HttpRequest const&)" -> "std::_Function_handler<void (HttpRequest const&, HttpResponse*), void (*)(HttpRequest const&, HttpResponse*)>::_M_invoke(std::_Any_data const&, HttpRequest const&, HttpResponse*&&)" [color="#0c6b8b", label="18.64%\n9312×", arrowsize="0.43", fontsize="10.00", fontcolor="#0c6b8b", labeldistance="0.75", penwidth="0.75"];
	vfprintf [color="#3fc009", fontcolor="#ffffff", fontsize="10.00", label="vfprintf\n57.48%\n(32.60%)\n345011×"];
	vfprintf -> "_IO_default_xsputn" [color="#0c5285", label="14.38%\n4354731×", arrowsize="0.38", fontsize="10.00", fontcolor="#0c5285", labeldistance="0.58", penwidth="0.58"];
	"TcpServer::newConnection(int, NetAddress const&)" [color="#0c9a7f", fontcolor="#ffffff", fontsize="10.00", label="TcpServer::newConnection\n29.68%\n(0.19%)\n9313×"];
	"TcpServer::newConnection(int, NetAddress const&)" -> "Logger::record(int, char const*, int, char const*, char const*, ...)" [color="#0d2079", label="4.53%\n9313×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d2079", labeldistance="0.50", penwidth="0.50"];
	"TcpServer::newConnection(int, NetAddress const&)" -> "__snprintf_chk" [color="#0d1475", label="1.66%\n9313×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d1475", labeldistance="0.50", penwidth="0.50"];
	"TcpServer::newConnection(int, NetAddress const&)" -> "EventLoop::runInLoop(std::function<void ()> const&)" [color="#0d387f", label="9.48%\n9313×", arrowsize="0.35", fontsize="10.00", fontcolor="#0d387f", labeldistance="0.50", penwidth="0.50"];
}
